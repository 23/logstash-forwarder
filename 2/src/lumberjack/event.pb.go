// Code generated by protoc-gen-go.
// source: event.proto
// DO NOT EDIT!

package lumberjack

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type FileEvent struct {
	Source           *string `protobuf:"bytes,1,req,name=source" json:"source,omitempty"`
	Offset           *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	Line             *uint64 `protobuf:"varint,3,req,name=line" json:"line,omitempty"`
	Text             *string `protobuf:"bytes,4,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *FileEvent) Reset()         { *this = FileEvent{} }
func (this *FileEvent) String() string { return proto.CompactTextString(this) }
func (*FileEvent) ProtoMessage()       {}

func (this *FileEvent) GetSource() string {
	if this != nil && this.Source != nil {
		return *this.Source
	}
	return ""
}

func (this *FileEvent) GetOffset() uint64 {
	if this != nil && this.Offset != nil {
		return *this.Offset
	}
	return 0
}

func (this *FileEvent) GetLine() uint64 {
	if this != nil && this.Line != nil {
		return *this.Line
	}
	return 0
}

func (this *FileEvent) GetText() string {
	if this != nil && this.Text != nil {
		return *this.Text
	}
	return ""
}

type EventEnvelope struct {
	Events           []*FileEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (this *EventEnvelope) Reset()         { *this = EventEnvelope{} }
func (this *EventEnvelope) String() string { return proto.CompactTextString(this) }
func (*EventEnvelope) ProtoMessage()       {}

func (this *EventEnvelope) GetEvents() []*FileEvent {
	if this != nil {
		return this.Events
	}
	return nil
}

func init() {
}
